/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> result;
        if(!root) return result;
        stack<TreeNode*> stack;
        TreeNode* prev=nullptr;
        stack.push(root);
        while(!stack.empty()){
                TreeNode* curr=stack.top();
                if(!curr->left && !curr->right || prev && (prev == curr->left||prev==curr->right)){
                    result.push_back(curr->val);

                    stack.pop();
                    prev=curr;
                }
                else{
                    if(curr->right){
                        stack.push(curr->right);
                    }
                    if(curr->left){
                        stack.push(curr->left);
                    }
                }
        }
        return result;
    }
};
